extends layout

block content
    // GET sci-studies
    details
        summary
            span.route GET sci-studies/sci-studies
            span Get all scientific studies used in the tool
        ul <b>Parameters</b>
            li records (string): if records is true, the array returned is object oriented. Otherwise, it is column oriented (polars dataframe).
        ul <b>Responses</b>
            li 200: Returns an array with all scientific studies that are used in the tool
        ul.bold Example
            div
                code #{url}/sci-studies/sci-studies?records=true
    // GET technologies
    details
        summary
            span.route GET technologies/technologies
            span Get the list of technologies
        ul <b>Parameters:</b>
            li id (string): The id of the technology to retrieve (only one).
        ul <b>Responses:</b>
            li 200: Returns an array with technologies
            li 400: Bad request if <code>id</code> does not exist

        ul.bold Example
            div
                code #{url}/technologies/technologies?id=French_CW
        ul Table with ids and the corresponding technology:
        .col-6.indent
            table.indent.table.table-striped.table-sm
                tr
                    th id
                    th Description
                each tech in technologies
                    tr
                        td
                            a(href = url+'/technologies/technologies?id='+tech.id)= tech.id
                        td=tech.name
    // POST find-nbs
    details
        summary
            span.route POST technologies/find-nbs
            span Find all the NBS suitable for a scenario
        ul <b>Parameters</b>
            li waterType (string): The type of water in the scenario. Defaults to <code>any_wastewater</code>, and so, it returns only technologies for water treatment.
                ul One of the following:
                    each water in waterTypes
                        li.indent
                            code=water
                ul When the <code>waterType</code> ends with "_wastewater" or is "greywater", then the technologies for water treatment are selected and the following parameters ignored: <code>volume</code> and <code>infiltration</code>.
                ul When the <code>waterType</code> ends with "_water", then the technologies for stormwater management are selected and the following parameters ignored: <code>inhabitants</code>, <code>litresPerson</code>, <code>inflow</code>, <code>pollutants</code>, <code>climate</code> and <code>avgTemperature</code>.
            ul <b>Parameters for treatment technologies:</b>
                li inhabitants (positive number): The number of people served by the technology.
                li litresPerson (positive number): The litres of wastewater generated by a person in a day. Default: <code>120</code>.
                li inflow (positive number): The inflow in litres/day. If not provided is calculated as <code>inhabitants * litresPerson</code>
                li climate (string): The climate of the scenario, according to Koppen classification. Default: <code>temperate</code>.
                    ul One of the following:
                        each climate in climates
                            li.indent
                                code=climate
                li avgTemperature (number): The average temperature of the coolest month in the scenario.
                    | If <code>climate</code> is not provided, this is used to classify the climate.
                li pollutants (array): The pollutants to be removed by the technology.
                    ul Any of the following:
                        each pollutant in pollutants
                            li.indent
                                code=pollutant
                li pollutantsConcentrations (key:value object): The pollutants concentrations in the inflow and outflow. The name of the pollutants must be suffixed with <code>_in</code> or <code>_out</code> depending on the location of the pollutant. The value of the pollutant must be a positive number. For example: <code>{"bod_in": 50, "bod_out": 10}</code>. The pollutants admitted and the units are in the following table:
                    table.indent.table.table-striped.table-sm
                        tr
                            th Pollutant
                            th Units
                        each pol in polUnits
                            tr
                                td=pol.name
                                td=pol.units
            ul <b>Parameters for stormwater management technologies:</b>
                li volume (positive number): The volume of water to be retained or infiltrated in m<sup>3</sup>/day. If not provided, it is calculated as <code>inflow * 0.001</code>.
                li infiltration (positive number): The infiltration rate of the receiving soil in mm/hour. If not provided, it is assumed as 0, i.e., no infiltration is possible. Then, the technologies without retention or detention capacity are rejected.
            ul <b>Generic parameters:</b>
                li area (positive number): The available surface to allocate the technology.
                li vertical (boolean): If <code>false</code>, green wall technologies are rejected.
                li verticalArea (positive number): The available vertical surface to allocate vertical technologies.

                li household (boolean): If <code>true</code>, only technologies that are available at house scale are selected.
                li ecosystemServices (key:value object): The technologies are filtered in terms of the provision of ecosystem services. The values admitted are from 0 (none) to 3 (high). All technologies providing the ecosystem services at that level or higher are included in the list of technologies returned.
                    ul The ecosystem services admitted are:
                        each es in ecosystemServices
                            li.indent
                                code=es
                li energy (string 'yes'|'no'): If 'no' technologies not using energy are selected. If 'yes' only technologies using energy are selected.
                li manPower (int 0:3): Manpower is the level of work hours required for the operation of the technologies. When provided, all technologies with a higher level of manpower are rejected.
                li skills (int 0:3): Skills refer to the required technical knowledge to operate the technology. When provided, all technologies with a higher level of manpower are rejected.
                li biohazardRisk (int 0:3): Biohazard risks include microorganisms, viruses and toxins that can affect human health. When provided, all technologies with a higher level of manpower are rejected.
            li techIds (array): This is a backdoor to get specific technologies. It expects and array of IDs corresponding to technologies in the knowledge base.
        ul <b>Responses</b>
            li 200: Returns an array with all suitable technologies.
            li 400: Bad request with an error message if body or some parameters are not in the expected format.

        div.indent
            | <b>Example body</b>
            pre
                code.code {<br>
                    | &emsp; "waterType": "greywater",
                    | &emsp; "inhabitants": 200,
                    | &emsp; "litresPerson": 120,
                    | &emsp; "inflow": 3000,
                    | &emsp; "area": 200,
                    | &emsp; "pollutants": ["c_removal", "p_removal"],
                    | &emsp; "climate": "tropical",
                    | &emsp; "avgTemperature": 21,
                    | &emsp; "vertical": false,
                    | &emsp; "verticalArea": 50,
                    | &emsp; "ecosystemServices" : {
                    | &emsp; &emsp; "es_biodiversity_fauna": 2,
                    | &emsp; &emsp; "es_recreation": 3
                    | &emsp; &nbsp;},
                    | &emsp; "energy": "no"
                    | &emsp; "manPower": 3
                    | &emsp; "skills": 2
                    | &emsp; "biohazardRisk": 1
                    | }
    // POST find-nbs-multiple
    details
        summary
            span.route POST technologies/find-nbs-multiple
            span Vectorized version of
                code /find-nbs
        ul
            b Parameters
            li It accepts the same parameters as
                code find-nbs
                span but it expects an array of objects instead of an object in the request body.
        ul
            b Responses
            li 200: Returns an array containing an array of technologies for each object (scenario) in the body request.
            li 400: Returns a bad request when the request body is not an array
        ul
            b Details
            li If some of the scenarios (objects in the array) returns a bad request, that item contains an error message
            | instead of the technology as follows:
            code [{error: error message}]
        div.indent
            | <b>Example body</b>
            pre
                code.code [<br>
                    | &emsp; {
                    | &emsp; &emsp; "waterType": "greywater",
                    | &emsp; &emsp; "inhabitants": 200,
                    | &emsp; &emsp; "litresPerson": 120,
                    | &emsp; &emsp; "inflow": 3000,
                    | &emsp; &emsp; "area": 200,
                    | &emsp; &emsp; "climate": "tropical",
                    | &emsp; &emsp; "avgTemperature": 21
                    | &emsp; },
                    | &emsp; {
                    | &emsp; &emsp; "waterType": "raw_domestic_wastewater"
                    | &emsp; }
                    | ]
    // POST MCDA
    details
        summary
            span.route POST technologies/mcda
            span Calculate scores for MultiCriteria Decision Analysis
        ul
            b Parameters
            li techs (array): An array of technologies with features as provided by <code>technologies/find-nbs</code>.
            li techIds (array): An array of ids of technologies. If <code>techs</code> is provided, this parameter is ignored.
            li weights (key:value object): An object with the weights of each score in the mcda between 0 and 5. Weights not provided default to 2.5.
                ul The ecosystem services admitted are:
                    each w in weights
                        li.indent
                            code=w
        ul
            b Responses
            li 200: Returns an array containing an array of technologies for each object (scenario) in the body request.
            li 400: Returns a bad request when the request body is not an array
        div.indent
            | <b>Example body</b>
            pre
                code.code {<br>
                    | &emsp; "techIds": ["WW", "HSSF_CW", "GR"],
                    | &emsp; "weights" : {
                    | &emsp; &emsp; "wOperation": 2,
                    | &emsp; &emsp; "wEnvImpact": 3
                    | &emsp; &nbsp;}
                    | }
    // POST add-sci-study
    details
        summary
            span.route POST sci-studies/add-sci-study
            span Add scientific study to the knowledge base.
        p.mt-2 If your study has more than one sample with different concentrations in the inflow or in the outflow, please upload as separate studies repeating the corresponding information.
        ul
            b Parameters
            li username (string)*: The username of the user adding the study.
            li token (string)*: The token of the user adding the study (provided by API administrators).
            li email (string)*: The email of the user adding the study.
            li company (string): The company of the user adding the study.
            li technology (key:value object)*: Information on the technology features.
                details.indent
                    summary It can contain the following keys, some of them are mandatory (*):
                    ul
                        li techId (string)*: The id of the technology according to knowledge base:
                            details.indent
                                summary One of the following ids:
                                table.indent.table.table-striped.table-sm
                                    tr
                                        th id
                                        th Description
                                    each tech in technologies
                                        tr
                                            td
                                                a(href = url + '/technologies/technologies?id=' + tech.id)= tech.id
                                            td=tech.name
                        li surface (positive number)*: The surface of the technology in m<sup>2</sup>.
                        li year_operation (positive int)*: The year of operation of the technology.
                        li hrt (positive number): The hydraulic retention time in days.
                        li peopleServed (positive number): The number of people served by the technology.
            li water (key:value object)*: Information on the water features
                details.indent
                    summary It can contain the following keys, some of them are mandatory (*):
                    ul
                        li type (string)*: The type of water used in the study. One of the following:
                            ul
                                each water in waterTypes
                                    li.indent
                                        code=water
                            p If your water does not fit with any of the above categories, please contact us.
                        li inflow (positive number)*: The inflow in m<sup>3</sup>/day.
                        li urbanWaterSystem (string): The urban water system where the technology is located. One of the following:
                            ul
                                each s in uws
                                    li.indent
                                        code=s
                        li temperature (positive number): The temperature of the water in ºC.
                        li airTemperature (number): The temperature of the air in ºC.
            li pollutants (key:value object): The pollutants concentrations in the inflow and outflow. The name of the polluntats must be suffixed with <code>_in</code> or <code>_out</code> depending on the location of the pollutant. The value of the pollutant must be a positive number. For example: <code>{"bod_in": 50, "bod_out": 10}</code>. The pollutants admitted and the units are in the following table:
                table.indent.table.table-striped.table-sm
                    tr
                        th Pollutant
                        th Units
                    each pol in polUnits
                        tr
                            td=pol.name
                            td=pol.units
            li document (key:value object)*: Information of the publication presenting the data.
                details.indent
                    summary It may contain the following keys, some of them are mandatory (*):
                    ul
                        li title (string)*: The title of the publication.
                        li doi (string)*: The doi of the publication. If the publication does not have a doi, you can upload it to a repository that provides a doi (e.g. Zenodo).
                        li year (positive int)*: The year of publication.
                        li authors (string): The authors of the publication. The authors shpould follow the format <code>last_name, first_name initials</code>. If there are more than one author, they should be separated by <code>;</code>.
                        li journal (string): The journal where the publication was published.
                        li issue (string): The issue of the journal where the publication was published.
                        li startPage (positive int): The start page of the publication in the journal.
                        li endPage (positive int): The end page of the publication in the journal.







